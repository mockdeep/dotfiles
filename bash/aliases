# work with dotfiles
alias ea='vim $DOT_PATH/bash/aliases && rl'
alias rl="source $DOT_PATH/bashrc"

alias la='ls -a'
alias emacs='emacs -nw'
alias hrc='heroku run console -r heroku'
alias hrcp='heroku run console -r heroku --size=performance-L'
alias hrcs='heroku run console -r staging'
alias drst='while :; do clear; dropbox status; sleep 3; done'
alias o='xdg-open $@'
alias rotate_left='ffmpeg -vf transpose=2 out.mp4 -i'
alias rotate_right='ffmpeg -vf transpose=1 out.mp4 -i'
alias rotate_twice='ffmpeg -vf transpose=2,transpose=2 out.mp4 -i'

function vimcheck {
  vim $(git diff --check | cut -f 1 -d ':' | uniq)
}

function vimbranch {
  vim $(git diff main --name-only | uniq)
}

# productivity stuff
alias jnl='vim $DOC_PATH/journal/`date +%Y-%m-%d`.txt'
alias youtube-dl-playlist='youtube-dl --download-archive archive.txt -o "%(playlist_index)03d %(title)s.%(ext)s" $@'
alias dl_series='yt-dlp -o "%(autonumber)03d %(title)s.%(ext)s" --playlist-reverse'

function jrnl {
  today=`date +%Y-%m-%d`
  filepath="$DOC_PATH/journal"
  i=0
  while [ -e "${filepath}/${today}.${i}.txt" ]; do
    let i=i+1
  done
  vim "${filepath}/${today}.${i}.txt"
}

alias outlines='cd $DOC_PATH/outlines'
alias lst='outlines && vi list.md && hamdown -f list.md -p 55 -c -t > list.html && firefox list.html'
alias tasks="trello card list -l $TRELLO_NOW_LIST_ID | grep Name: | cut -f 2 -d ')'"

# system stuff
alias ud="sudo apt-get update && sudo apt-get upgrade && sudo apt-get dist-upgrade"
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'

# project paths
alias bm='cd $PROJECT_PATH/web_apps/better'
alias boo='cd $PROJECT_PATH/web_apps/boon-blog'
alias bt='cd $PROJECT_PATH/web_apps/boon_top'
alias bud='cd $PROJECT_PATH/web_apps/budget'
alias ch='cd $PROJECT_PATH/web_apps/chai'
alias conf='cd $PROJECT_PATH/open_source/configurator'
alias template='cd $PROJECT_PATH/open_source/template'
alias gafk='cd $PROJECT_PATH/open_source/afk'
alias hdown='cd $PROJECT_PATH/gems/hamdown'
alias junk='cd $PROJECT_PATH/open_source/junk_drawer'
alias mu='cd $PROJECT_PATH/open_source/mutant'
alias rub='cd $PROJECT_PATH/open_source/ruby'
alias im='cd $PROJECT_PATH/open_source/ImageMagick'
alias im6='cd $PROJECT_PATH/open_source/ImageMagick6'
alias news='cd $PROJECT_PATH/web_apps/newsie'
alias rma='cd $PROJECT_PATH/open_source/rake-compiler-dev-box/rmagick'
alias sig='cd $PROJECT_PATH/open_source/signature-pad'
alias spu='cd $PROJECT_PATH/gems/speculate'
alias tds='cd $PROJECT_PATH/gems/todo_sync'
alias ti='cd $PROJECT_PATH/web_apps/tithe'
alias todo='cd $PROJECT_PATH/web_apps/elements'
function os {
  cd "$PROJECT_PATH/open_source/$1"
}

# ruby/rails stuff
alias spec="spec --color --format nested"
alias stopsyn="syn; pg_ctl stop; cd -"
alias stopstr="stringer; pg_ctl stop; cd -"
alias fsd="bundle && yarn && pg_ctl start && rails assets:clean assets:clobber && foreman start -f Procfile.dev; pg_ctl stop"
alias bundle_up="bundle && gem cleanup && bundle"
alias b='bundle'
alias by='bundle; yarn --ignore-engines'
alias y='yarn'
alias sc='script/console'
alias ss='script/server'
alias sdbc='script/dbconsole'
alias rc="rails console"
alias rs="rails server"

function cd_gem() {
  cd `bundle show $@`
}

alias nogems="gem list | cut -f 1 -d ' ' | xargs gem uninstall -a"
alias mutate="be mutant -I lib -d -r ./config/environment.rb -r ./app/models/user.rb --rspec-dm2 ::User"
alias crspec="SLOW=true DRIVER=chrome rspec"
alias srspec="SLOW=true DRIVER=selenium rspec"
alias yat='yarn eslint --fix && yarn test --coverage --maxWorkers=4'
alias yj='yarn jest --maxWorkers=4'

# echo is to trim leading spaces
alias killr='ps | grep ruby | xargs echo | cut -f 1 -d " " | xargs kill -9'
alias killrb='ps | grep irb | xargs echo | cut -f 1 -d " " | xargs kill -9'
alias testit='ruby -Ilib:test'
alias countrb='for file in $(find . | grep \.rb$); do wc -l "$file"; done | sort -h'
alias ns='notify-send "that thing is done"'
notify_sound="$DOT_PATH/sounds/notify.ogg"
alias nsb='ns; ogg123 -q $notify_sound $notify_sound $notify_sound'

# gitty stuff
grep_excludes=(':!*.svg' ':!*.pdf')
alias bomb='ruby $SCRIPT_PATH/branch_bomb.rb'
alias bas='baes --auto-skip'
alias gd='git diff'
alias gl='git log'
alias gds='git diff --staged'
alias gdm='git diff main'
alias gp='git pull'
alias gpu='git pull upstream main'
alias gad='git add .'
alias gca='git -c core.editor=true commit --amend'
alias gcm='git checkout main'
alias gcs='git checkout staging'
alias gra='git rebase --abort'
alias grc='git add . && git -c core.editor=true rebase --continue'
alias gst='git status -s'
function gg() {
  git grep -n "$@" -- './*' ${grep_excludes[@]}
}
function ggi() {
  git grep -ni "$@" -- './*' ${grep_excludes[@]}
}
function ggl() {
  git grep -l "$@" -- './*' ${grep_excludes[@]}
}
function gga() {
  git grep -n "$@" -- app/ ${grep_excludes[@]}
}
function ggal() {
  git grep -n -l "$@" -- app/ ${grep_excludes[@]}
}
function ggia() {
  git grep -ni "$@" -- app/ ${grep_excludes[@]}
}
function ggs() {
  git grep -ni "$@" -- spec/ ${grep_excludes[@]}
}
function ggjs() {
  git grep -n "$@" -- app/javascript/ spec/javascript ${grep_excludes[@]}
}

function gitclean() {
  git checkout main
  git remote prune $(git remote -v | grep -v heroku | cut -f 1 | uniq)
  git gc --prune=now
  echo "***"
  git br --merged | grep -v "\s\(main\|master\|staging\)" | xargs -r git br -d
}
alias gitage='for branch in $(git branch | grep -v "*"); do echo "$(git log -1 $branch --format=%ai) $branch"; done | sort'
alias rubodiff='git diff main --name-only --diff-filter=ACM | grep \\.rb$ | xargs rubocop -A --force-exclusion'
alias esdiff='git diff main --name-only --diff-filter=ACM | grep \\.ts | xargs ./node_modules/eslint/bin/eslint.js --cache --fix'
alias esopen='vim $(yarn eslint 2>&1 | grep "^/")'
alias rubogen='rubocop --auto-gen-config --auto-gen-only-exclude --exclude-limit 400'
alias hamlgen='rubocop --auto-gen-config --auto-gen-only-exclude --exclude-limit 400'
alias touchdiff='git diff main --name-only --diff-filter=ACM | xargs touch'
function blamer {
    git ls-tree -r HEAD | sed -re 's/^.{53}//' | while read filename; do file "$filename"; done | grep -E ': .*text'|sed -r -e 's/: .*//' | while read filename; do git blame "$filename"; done | cut -f 2 -d '(' | cut -f 1 -d ' ' | sort | uniq -i -c | sort -h -r
}
alias reponame="git remote -v | grep github.*fetch | cut -f 2 -d ':' | cut -f 1 -d '.'"
function obuild {
  o https://app.circleci.com/pipelines/github/`reponame`?branch=`git branch --show-current`
}

function jl {
    cp -n ~/Templates/Document.odt $DOC_PATH/journal/`date +%Y-%m-%d`.odt
    o $DOC_PATH/journal/`date +%Y-%m-%d`.odt
}

function list {
    o $DOC_PATH/lists/list.odt
}

# search all files in this folder recursively for some text
function grepit {
    grep -nr --color=always "$1" ./*
}

# search rails app in lib and app folders for text
function grepap {
    grep -nr "$1" lib/*
    grep -nr "$1" app/*
}

function keep_trying() {
  until eval $@; do echo "trying again"; done; ns
}

function dedupe() {
  until yarn deduplicate --fail; do
  yarn deduplicate
  yarn
  done
}

function try_to_fail() {
  while eval $@; do echo "trying again"; done; ns
}

if [[ `uname` == 'Darwin' ]]; then
  alias ls='ls -G'
else
  alias ls='ls --color'
fi
