# work with dotfiles
alias ea='vim $DOT_PATH/bash/aliases && rl'
alias rl="source $DOT_PATH/bashrc"

alias la='ls -a'
alias hrc='heroku run console -r heroku'
alias hrcp='heroku run console -r heroku --size=performance-L'
alias hrcw='heroku run console -r heroku -- -w'
alias drst='while :; do clear; dropbox status; sleep 3; done'
alias o='xdg-open $@'
alias rotate_left='ffmpeg -vf transpose=2 out.mp4 -i'
alias rotate_right='ffmpeg -vf transpose=1 out.mp4 -i'
alias rotate_twice='ffmpeg -vf transpose=2,transpose=2 out.mp4 -i'

function vimcheck {
  vim $(git diff --check | cut -f 1 -d ':' | uniq)
}

function vimbranch {
  vim $(git diff main --name-only | uniq)
}

# productivity stuff
alias youtube-dl-playlist='youtube-dl --download-archive archive.txt -o "%(playlist_index)03d %(title)s.%(ext)s" $@'
alias dl_series='yt-dlp -o "%(autonumber)03d %(title)s.%(ext)s" --playlist-reverse'

function jrnl {
  today=`date +%Y-%m-%d`
  filepath="$DOC_PATH/journal"
  i=0
  while [ -e "${filepath}/${today}.${i}.txt" ]; do
    let i=i+1
  done
  vim "${filepath}/${today}.${i}.txt"
}

# system stuff
alias ud="sudo apt-get update && sudo apt-get upgrade && sudo apt-get dist-upgrade"
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'

# project paths
alias bm='cd $PROJECT_PATH/web_apps/better'
alias boo='cd $PROJECT_PATH/web_apps/boon-blog'
alias bt='cd $PROJECT_PATH/web_apps/boon_top'
alias template='cd $PROJECT_PATH/open_source/template'
alias junk='cd $PROJECT_PATH/open_source/junk_drawer'
alias rub='cd $PROJECT_PATH/open_source/ruby'
alias im='cd $PROJECT_PATH/open_source/ImageMagick'
alias im6='cd $PROJECT_PATH/open_source/ImageMagick6'
alias rma='cd $PROJECT_PATH/open_source/rake-compiler-dev-box/rmagick'
alias spu='cd $PROJECT_PATH/gems/speculate'
alias tds='cd $PROJECT_PATH/gems/todo_sync'
function os {
  cd "$PROJECT_PATH/open_source/$1"
}

# ruby/rails stuff
alias stopsyn="syn; pg_ctl stop; cd -"
alias stopstr="stringer; pg_ctl stop; cd -"
alias fsd="bundle && yarn && rails assets:clobber && foreman start -f Procfile.dev"
alias bundle_up="bundle && gem cleanup && bundle"
alias b='bundle'
alias by='bundle; test -f yarn.lock && yarn --ignore-engines'
alias y='yarn'
alias sc='script/console'
alias ss='script/server'
alias sdbc='script/dbconsole'
alias rc="rails console"
alias rs="rails server"
alias pg="pg_ctl start"
alias pgs="pg_ctl stop"
alias pgr="pg_ctl start && redis-server; pg_ctl stop"

function cd_gem() {
  cd `bundle show $@`
}

alias yat='yarn eslint --fix && yarn test --coverage --maxWorkers=4'
alias yj='yarn jest --maxWorkers=4'

alias ns='notify-send "that thing is done"'
notify_sound="$DOT_PATH/sounds/notify.ogg"
alias nsb='ns; ogg123 -q $notify_sound $notify_sound $notify_sound'

# gitty stuff
grep_excludes=(':!*.svg' ':!*.pdf')
alias bas='baes rebase --auto-skip'
alias gd='git diff'
alias gd1='git diff HEAD~1'
alias gl='git log'
alias glp='git log -p'
alias gds='git diff --staged'
alias gdm='git diff main'
alias gdw='git diff -w'
alias gp='git pull'
alias gpu='git pull upstream main'
alias gad='git add .'
alias gca='git -c core.editor=true commit --amend'
alias gcm='git checkout main'
alias gcs='git checkout staging'
alias gra='git rebase --abort'
alias grc='git add . && git -c core.editor=true rebase --continue'
alias grm='git rebase main'
alias grs='git rebase --skip'
alias gst='git status -s'
alias vh='vim $(git show --pretty="format:" --name-only)'
alias vo='vim $(git diff --staged --name-only)'

function gg() {
  git grep -n "$@" -- './*' ${grep_excludes[@]}
}
function ggi() {
  git grep -ni "$@" -- './*' ${grep_excludes[@]}
}
function ggl() {
  git grep -l "$@" -- './*' ${grep_excludes[@]}
}
function gga() {
  git grep -n "$@" -- app/ ${grep_excludes[@]}
}
function ggal() {
  git grep -n -l "$@" -- app/ ${grep_excludes[@]}
}
function ggia() {
  git grep -ni "$@" -- app/ ${grep_excludes[@]}
}
function ggs() {
  git grep -ni "$@" -- spec/ ${grep_excludes[@]}
}
function ggjs() {
  git grep -n "$@" -- app/javascript/ spec/javascript ${grep_excludes[@]}
}

function vg() {
  vim $(ggl "$@")
}

function gitclean() {
  git checkout main
  git remote prune $(git remote -v | grep -v heroku | cut -f 1 | uniq)
  git gc --prune=now
  echo "***"
  git br --merged | grep -v "\s\(main\|master\|staging\)" | xargs -r git br -d
}

alias gcl='gitclean'
alias gitage='for branch in $(git branch | grep -v "*"); do echo "$(git log -1 $branch --format=%ai) $branch"; done | sort'
alias rubodiff='git diff main --name-only --diff-filter=ACM | grep \\.rb$ | xargs rubocop -A --force-exclusion'
alias esdiff='git diff main --name-only --diff-filter=ACM | grep \\.ts | xargs ./node_modules/eslint/bin/eslint.js --cache --fix'
alias esopen='vim $(yarn eslint 2>&1 | grep "^/")'
alias rubogen='rubocop --auto-gen-config --auto-gen-only-exclude --exclude-limit 400'
alias hamlgen='rubocop --auto-gen-config --auto-gen-only-exclude --exclude-limit 400'
alias ra='rubocop -A'
alias touchdiff='git diff main --name-only --diff-filter=ACM | xargs touch'
alias reponame="git remote -v | grep github.*fetch | cut -f 2 -d ':' | cut -f 1 -d '.'"
function obuild {
  o https://app.circleci.com/pipelines/github/`reponame`?branch=`git branch --show-current`
}

# search all files in this folder recursively for some text
function grepit {
    grep -nr --color=always "$1" ./*
}

# search rails app in lib and app folders for text
function grepap {
    grep -nr "$1" lib/*
    grep -nr "$1" app/*
}

function keep_trying() {
  until eval $@; do echo "trying again"; done; ns
}

function dedupe() {
  until yarn deduplicate --fail; do
  yarn deduplicate
  yarn
  done
}

function try_to_fail() {
  while eval $@; do echo "trying again"; done; ns
}

if [[ `uname` == 'Darwin' ]]; then
  alias ls='ls -G'
else
  alias ls='ls --color'
fi
